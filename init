#! /bin/sh
IPFS_HOST="127.0.0.1"
IPFS_PORT="5001"

IPFS_GATEWAY_HOST="$IPFS_HOST:$IPFS_PORT"

RUNTIME_CONFIG=$1
OUTPUT_DEV=$4
DATA_DEV=$3
PREV_OUTPUT_CID_BLOCKDEV=$2

if [ "$RUNTIME_CONFIG" = "qemu" ]; then
  ARCH=amd64
else
  ARCH=riscv64
fi

ARCH_PATH="/opt/$ARCH/bin"

echo "====================== TOSI STANDARD LOADER - STAGE 2 ========"
echo

export HOME=/root

# start up ipfs
cp -r /opt/ipfs /root/.ipfs
IPFS_PATH=/root/.ipfs $ARCH_PATH/ipfs daemon --offline &

echo "Waiting for IPFS"
while true; do 
    nc -z "$IPFS_HOST" "$IPFS_PORT"
    RET=$?
    echo $RET
    if [ x$RET = x0 ]; then
      break
    fi
    sleep 1
done
echo "IPFS up"

echo "Importing previous output DAG"
PREV_OUTPUT_CID=$($ARCH_PATH/car debug $PREV_OUTPUT_CID_BLOCKDEV | $ARCH_PATH/car compile | IPFS_PATH=/mnt/scratch/.ipfs $ARCH_PATH/ipfs dag import | grep "Pinned root" | cut -f 2)

echo "Importing data dev"
INPUT_CID=$($ARCH_PATH/car debug $DATA_DEV | $ARCH_PATH/car compile | IPFS_PATH=/mnt/scratch/.ipfs $ARCH_PATH/ipfs dag import | grep "Pinned root" | cut -f 2)

echo "Done importing"

mkdir -p /root/contract

echo "Unpacking contract directory"

$ARCH_PATH/ipfs get -a $PREV_OUTPUT_CID_BLOCKDEV/contract | tar -Cxf /root/contract -

echo "Done unpacking"

mkdir -p /root/contract/dev /root/contract/proc /root/contract/sys
mount --bind /dev /root/contract/dev
mount --bind /sys /root/contract/sys
mount --bind /proc /root/contract/proc

echo "Starting up contract.."
OUTPUT_CID=$(HOME=/root chroot /mnt/code /init $PREV_OUTPUT_CID $INPUT_CID)
PROCESS_RETURN_CODE=$?
if [ $PROCESS_RETURN_CODE != 0 ]; then
	echo "RETURN_STATUS: $PROCESS_RETURN_CODE - OUTPUT_CID: $OUTPUT_CID"
	echo "non-zero status received, previous output CID comes new output CID"
	OUTPUT_CID=$PREV_OUTPUT_CID
fi

printf '%s\0' $OUTPUT_CID > /tmp/pre-keccak
python3 /keccak256.py /tmp/pre-keccak > /tmp/keccak
xxd -r -p < /tmp/keccak > $OUTPUT_DEV

# no need to do this in court
if [ "$RUNTIME_CONFIG" = "qemu" ]; then
   IPFS_PATH=/mnt/scratch/.ipfs $ARCH_PATH/ipfs dag export $OUTPUT_CID > /mnt/scratch/output.car
fi

echo "Done, halting..."

/bin/sync

if [ "$RUNTIME_CONFIG" = "qemu" ]; then
  exec /sbin/reboot -f
else 
  exec /sbin/halt -f
fi
