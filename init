#! /bin/sh
IPFS_HOST="127.0.0.1"
IPFS_PORT="5001"

IPFS_GATEWAY_HOST="$IPFS_HOST:$IPFS_PORT"

RUNTIME_CONFIG=$1
OUTPUT_DEV=$4
DATA_DEV=$3
PREV_OUTPUT_CID_BLOCKDEV=$2

if [ "$RUNTIME_CONFIG" = "qemu" ]; then
  ARCH=amd64
else
  ARCH=riscv64
fi

ARCH_PATH="/opt/$ARCH/bin"

echo "====================== TOSI STANDARD LOADER - STAGE 2 ========"
echo

export HOME=/root

# start up ipfs
cp -r /opt/ipfs /root/.ipfs
echo "Importing previous output DAG"
# XXX this should be improved
PREV_OUTPUT_CID=$($ARCH_PATH/car debug $PREV_OUTPUT_CID_BLOCKDEV | $ARCH_PATH/car compile | IPFS_PATH=/root/.ipfs $ARCH_PATH/ipfs --offline dag import | grep "Pinned root" | cut -f 2)

echo "Importing data dev"
# XXX this should be improved
INPUT_CID=$($ARCH_PATH/car debug $DATA_DEV | $ARCH_PATH/car compile | IPFS_PATH=/root/.ipfs $ARCH_PATH/ipfs --offline dag import | grep "Pinned root" | cut -f 2)

echo "Done importing"

mkdir -p /contract

echo "Unpacking contract directory"

IPFS_PATH=/root/.ipfs $ARCH_PATH/ipfs --offline get -o /root/contract.squashfs $PREV_OUTPUT_CID_BLOCKDEV/contract.squashfs

echo "Done unpacking, starting IPFS"

IPFS_PATH=/root/.ipfs $ARCH_PATH/ipfs daemon --offline &


echo "Waiting for IPFS"
while true; do 
    nc -z "$IPFS_HOST" "$IPFS_PORT"
    RET=$?
    echo $RET
    if [ x$RET = x0 ]; then
      break
    fi
    sleep 1
done
echo "IPFS up"

mount -t squashfs -o ro /root/contract.squashfs /contract
mkdir -p /contract/dev /contract/proc /contract/sys
mount --bind /dev /contract/dev
mount --bind /sys /contract/sys
mount --bind /proc /contract/proc
mount --bind /root /contract/root

echo "Starting up contract.."
OUTPUT_CID=$(HOME=/root chroot /mnt/code /init $PREV_OUTPUT_CID $INPUT_CID)
PROCESS_RETURN_CODE=$?
if [ $PROCESS_RETURN_CODE != 0 ]; then
	echo "RETURN_STATUS: $PROCESS_RETURN_CODE - OUTPUT_CID: $OUTPUT_CID"
	echo "non-zero status received, previous output CID becomes new output CID"
	OUTPUT_CID=$PREV_OUTPUT_CID
fi

IPFS_PATH=/root/.ipfs $ARCH_PATH/ipfs --offline get -o /tmp/output.file  $OUTPUT_CID/output.file

OUTPUT_SHA256=$(sha256sum /tmp/output.file | cut -d " " -f 1)

printf "%s\0%s\0" $OUTPUT_CID $OUTPUT_SHA256 > /tmp/pre-sha256
SHA256=$(sha256sum /tmp/pre-sha256 | cut -d " " -f -1)
echo -n $SHA256 | xxd -r -p > $OUTPUT_DEV

# no need to do this in court
if [ "$RUNTIME_CONFIG" = "qemu" ]; then
   IPFS_PATH=/root/.ipfs $ARCH_PATH/ipfs dag export $OUTPUT_CID > /root/output.car
fi

echo "Done, halting..."

/bin/sync

if [ "$RUNTIME_CONFIG" = "qemu" ]; then
  exec /sbin/reboot -f
else 
  exec /sbin/halt -f
fi
